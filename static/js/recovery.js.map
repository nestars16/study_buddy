{"version":3,"file":"recovery.js","sources":["webpack:///./static_sources/js/editorActions.js","webpack:///./static_sources/js/recovery.js"],"sourcesContent":["export async function savePost(documentId, text) {\n  try {\n    const response = await fetch(\"/save\", {\n      method: \"PUT\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ document_id: documentId, text: text }),\n    });\n\n    if (response.status != 200) {\n      open_external_error_modal(response, await response.text());\n      return;\n    }\n  } catch (error) {\n    open_external_error_modal(null, error);\n  }\n}\n\nexport async function deleteDocument(documentId) {\n  try {\n    const response = await fetch(`/delete_document?document_id=${documentId}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n    });\n\n    if (response.status != 200) {\n      open_external_error_modal(response, await response.text());\n      return;\n    }\n  } catch (error) {\n    open_external_error_modal(null, error);\n  }\n}\n\nexport function highlight(editor, highlightEl) {\n  window.requestAnimationFrame(() => {\n    const highlighted = hljs.highlight(editor.value, {\n      language: \"markdown\",\n    }).value;\n    highlightEl.innerHTML = highlighted;\n  });\n}\n\nexport function resizeTextarea(textArea) {\n  if (!textArea) {\n    return;\n  }\n\n  window.requestAnimationFrame(() => {\n    textArea.style.height = 0;\n    if (textArea.scrollHeight > 0) {\n      textArea.style.height = `${textArea.scrollHeight + 2}px`;\n    }\n  });\n}\n\nexport function enableTabbing(event) {\n  if (event.key === \"Tab\") {\n    event.preventDefault();\n\n    editor.setRangeText(\n      \"  \",\n      editor.selectionStart,\n      editor.selectionStart,\n      \"end\",\n    );\n  }\n}\n\nexport function updateLineNumbers(event) {\n  const lineNumbers = document.querySelector(\".line-numbers\");\n\n  const numberOfLines = event.target.value.split(\"\\n\").length;\n\n  lineNumbers.innerHTML = Array(numberOfLines).fill(\"<span></span>\").join(\"\");\n}\n\nexport function closeDocumentCreationModal() {\n  const titleModal = document.getElementById(\"user-document-title-modal\");\n  titleModal.close();\n}\n\nexport function openDocumentTitleModal() {\n  const titleModal = document.getElementById(\"user-document-title-modal\");\n  titleModal.showModal();\n}\n\nexport function openUserActionsModal(modalTitle) {\n  const modal = document.getElementById(\"user-modal\");\n\n  modal.showModal();\n\n  const modal_h2 = document.getElementById(\"user-modal-title\");\n  modal_h2.textContent = modalTitle;\n\n  const rememberMeText = document.getElementById(\"remember-me\");\n  const forgotPasswordLink = document.getElementById(\"forgot-password\");\n\n  switch (modalTitle) {\n    case \"Register\":\n      const confirmPassword = document.getElementById(\n        \"password-confirmation-field\",\n      );\n\n      confirmPassword.classList.remove(\"hidden\");\n      rememberMeText.classList.add(\"hidden\");\n      forgotPasswordLink.classList.add(\"hidden\");\n      break;\n    case \"Log In\":\n      const toggleSwitch = document.getElementById(\"toggle-switch\");\n      toggleSwitch.classList.remove(\"hidden\");\n      rememberMeText.classList.remove(\"hidden\");\n\n      forgotPasswordLink.classList.remove(\"hidden\");\n\n      break;\n  }\n\n  modal.classList.remove(\"hidden\");\n}\n\nexport function closeUserActionModal() {\n  const userActionModal = document.getElementById(\"user-modal\");\n  const confirmPassword = document.getElementById(\n    \"password-confirmation-field\",\n  );\n  confirmPassword.classList.add(\"hidden\");\n  userActionModal.close();\n\n  const toggleSwitch = document.getElementById(\"toggle-switch\");\n\n  toggleSwitch.classList.add(\"hidden\");\n\n  const rememberMeText = document.getElementById(\"remember-me\");\n\n  rememberMeText.classList.add(\"hidden\");\n\n  const forgotPasswordLink = document.getElementById(\"forgot-password\");\n\n  forgotPasswordLink.classList.add(\"hidden\");\n}\n\nexport function closeErrorModal() {\n  const errorModal = document.getElementById(\"error-modal\");\n  errorModal.close();\n}\n\nexport function closeAllDocumentsModal() {\n  const allDocumentsModal = document.getElementById(\"all-documents-modal\");\n  allDocumentsModal.close();\n}\n\nexport function toggleMode() {\n  const body = document.querySelector(\"body\");\n  let currentMode = \"\";\n\n  const toggleModeInner = (dark_variant, light_variant, element) => {\n    if (element.classList.contains(dark_variant)) {\n      element.classList.remove(dark_variant);\n      element.classList.add(light_variant);\n    } else {\n      element.classList.remove(light_variant);\n      element.classList.add(dark_variant);\n    }\n  };\n\n  if (body.classList.contains(\"dark-mode-body\")) {\n    body.classList.remove(\"dark-mode-body\");\n    body.classList.add(\"light-mode-body\");\n    currentMode = \"light\";\n  } else {\n    body.classList.remove(\"light-mode-body\");\n    body.classList.add(\"dark-mode-body\");\n    currentMode = \"dark\";\n  }\n\n  const titles = document.querySelectorAll(\".user-modal-title\");\n\n  for (const title of titles) {\n    toggleModeInner(\"dark-user-modal-title\", \"light-user-modal-title\", title);\n  }\n\n  const modals = document.querySelectorAll(\".modal\");\n\n  for (const modal of modals) {\n    toggleModeInner(\"dark-mode-modal\", \"light-mode-modal\", modal);\n  }\n\n  const buttons = document.querySelectorAll(\".action-button\");\n\n  for (const button of buttons) {\n    if (button.id === \"all-documents\") {\n      continue;\n    }\n    toggleModeInner(\"dark-mode-button\", \"light-mode-button\", button);\n  }\n\n  const inputFields = [\n    document.getElementById(\"email-field\"),\n    document.getElementById(\"password-field\"),\n    document.getElementById(\"password-confirmation-field\"),\n    document.getElementById(\"document-title-field\"),\n  ];\n\n  for (const inputField of inputFields) {\n    toggleModeInner(\n      \"dark-mode-text-field\",\n      \"light-mode-text-field\",\n      inputField,\n    );\n  }\n\n  const editor = document.getElementById(\"editor\");\n  toggleModeInner(\"dark-mode-input\", \"light-mode-input\", editor);\n\n  const toggleButton = document.getElementById(\"toggle-modes\");\n  const moonIcon = document.getElementById(\"moon\");\n  const sunIcon = document.getElementById(\"sun\");\n\n  if (toggleButton.classList.contains(\"dark-mode-toggle\")) {\n    toggleButton.classList.remove(\"dark-mode-toggle\");\n    toggleButton.classList.add(\"light-mode-toggle\");\n    moonIcon.classList.add(\"hidden\");\n    sunIcon.classList.remove(\"hidden\");\n  } else {\n    toggleButton.classList.remove(\"light-mode-toggle\");\n    toggleButton.classList.add(\"dark-mode-toggle\");\n    sunIcon.classList.add(\"hidden\");\n    moonIcon.classList.remove(\"hidden\");\n  }\n\n  return currentMode;\n}\n\nlet globalTimeoutId = null;\n\nasync function changeToSelectedDocument(event, fetchFunction, documentArray) {\n  if (globalTimeoutId) {\n    clearInterval(globalTimeoutId);\n  }\n\n  const arrayId = event.target.id;\n  const { document_id, title } = documentArray[arrayId];\n  document.getElementById(\"document-title\").innerText = title;\n  const editor = document.getElementById(\"editor\");\n  const response = await fetchFunction(document_id);\n  editor.value = response;\n  document\n    .getElementById(\"editor\")\n    .dispatchEvent(new Event(\"input\", { bubbles: true }));\n  document.getElementById(\"document-close-button\").click();\n\n  globalTimeoutId = setInterval(() => {\n    savePost(document_id, document.getElementById(\"editor\").value);\n  }, 60000);\n}\n\nasync function deleteSelectedDocument(event, deleteFunction, documentArray) {\n  const arrayId = event.target.parentElement.id;\n\n  const { document_id } = documentArray[arrayId];\n\n  await deleteFunction(document_id);\n}\n\nexport function showUserPosts(documentArray, currentMode, fetchFunction) {\n  const documentModal = document.getElementById(\"document-section\");\n  documentModal.innerHTML = \"\";\n\n  for (const [index, value] of documentArray.entries()) {\n    const documentAnchor = document.createElement(\"a\");\n    const documentAnchorDelete = document.createElement(\"button\");\n    documentAnchorDelete.textContent = \"🗑️\";\n    documentAnchorDelete.classList.add(\"button-delete\");\n    documentAnchor.href = \"#\";\n    documentAnchor.id = index;\n\n    let classListName;\n\n    switch (currentMode) {\n      case \"dark\":\n        classListName = \"dark-mode-document-link\";\n        break;\n      case \"light\":\n        classListName = \"light-mode-document-link\";\n        break;\n    }\n\n    documentAnchor.classList.add(classListName);\n\n    documentAnchor.onclick = (event) => {\n      changeToSelectedDocument(event, fetchFunction, documentArray);\n    };\n\n    documentAnchorDelete.onclick = (event) => {\n      deleteSelectedDocument(event, deleteDocument, documentArray);\n      closeAllDocumentsModal();\n    };\n\n    documentAnchor.innerText = value.title;\n    documentAnchor.appendChild(documentAnchorDelete);\n\n    documentModal.appendChild(documentAnchor);\n\n    if (index !== documentArray.length - 1) {\n      documentModal.appendChild(document.createElement(\"hr\"));\n    }\n  }\n\n  document.getElementById(\"all-documents-modal\").showModal();\n\n  if (documentArray.length === 0) {\n    documentModal.innerText =\n      \"You have no documents, try creating some with the plus icon 🤓\";\n  }\n}\n\nexport function disableButtonAndShowSpinner(button, mode) {\n  let spinnerColor;\n  switch (mode) {\n    case \"light\":\n      spinnerColor = \"black\";\n      break;\n    case \"dark\":\n      spinnerColor = \"#FAFAFA\";\n      break;\n  }\n\n  button.style.borderTopColor = spinnerColor;\n  button.disabled = true;\n  button.classList.add(\"loading-button\");\n}\n\nexport function enableButtonAndRemoveSpinner(button) {\n  button.disabled = false;\n  button.classList.remove(\"loading-button\");\n}\n\nexport function enableLoadingScreen() {\n  const overlay = document.querySelector(\".overlay\");\n  overlay.classList.remove(\"hidden\");\n  overlay.classList.add(\"loading-overlay\");\n}\n\nexport function disableLoadingScreen() {\n  const overlay = document.querySelector(\".overlay\");\n  overlay.classList.add(\"hidden\");\n  overlay.classList.remove(\"loading-overlay\");\n}\n\nexport function enableUserModalShake(modal) {\n  modal.classList.add(\"error-shake-modal\");\n}\n","import {\n  disableButtonAndShowSpinner,\n  enableButtonAndRemoveSpinner,\n  enableUserModalShake,\n} from \"./editorActions.js\";\n\nasync function sendEmailForRecovery() {\n  const emailModal = document.getElementById(\"email-submission\");\n  emailModal.classList.add(\"hidden\");\n  const sentModal = document.getElementById(\"sent\");\n  sentModal.classList.remove(\"hidden\");\n  await submitEmailButtonAction();\n}\n\nasync function submitEmailButtonAction() {\n  try {\n    const serverResponse = await fetch(\"/send_recovery\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: document.getElementById(\"text-field\").value,\n      }),\n    });\n\n    if (serverResponse.status != 200) {\n      console.log(\"Failed to send email\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function tryRecoveryCode(recoveryCode, password, password_confirm) {\n  const modalError = document.getElementById(\"modal-error\");\n\n  if (password !== password_confirm) {\n    modalError.textContent = \"Passwords must exactly match\";\n    enableButtonAndRemoveSpinner(\n      document.getElementById(\"recovery-submit-button\"),\n    );\n    enableUserModalShake(document.getElementById(\"recovery-modal\"));\n    return;\n  }\n\n  const passwordRegex = /(?=.*[A-Za-z])(?=.*\\d).{8,}$/;\n\n  if (!password.match(passwordRegex)) {\n    modalError.textContent =\n      \"Password must contain minimum eight characters\\nat least one letter and one number\";\n    enableButtonAndRemoveSpinner(\n      document.getElementById(\"recovery-submit-button\"),\n    );\n    enableUserModalShake(document.getElementById(\"recovery-modal\"));\n    return;\n  }\n\n  try {\n    const serverResponse = await fetch(\"/try_recovery_code\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code: recoveryCode,\n        password: password,\n      }),\n    });\n\n    if (serverResponse.status != 200) {\n      modalError.textContent = await serverResponse.text();\n      enableButtonAndRemoveSpinner(\n        document.getElementById(\"recovery-submit-button\"),\n      );\n      enableUserModalShake(document.getElementById(\"recovery-modal\"));\n    }\n  } catch (error) {\n    modalError.textContent =\n      \"There was an error trying to reset your password try again in a few moments\";\n    enableButtonAndRemoveSpinner(\n      document.getElementById(\"recovery-submit-button\"),\n    );\n    enableUserModalShake(document.getElementById(\"recovery-modal\"));\n  }\n}\n\nfunction showRecoveryCodePrompt() {\n  const emailModal = document.getElementById(\"email-submission\");\n  emailModal.close();\n\n  const sentModal = document.getElementById(\"sent\");\n  sentModal.close();\n\n  const recoveryModal = document.getElementById(\"recovery-modal\");\n  recoveryModal.show();\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const sendEmailForRecoveryButton = document.getElementById(\"submit-button\");\n\n  const recoveryCodeLink = document.getElementById(\"recovery-code\");\n\n  const codeRecoverySubmitButton = document.getElementById(\n    \"recovery-submit-button\",\n  );\n\n  sendEmailForRecoveryButton.onclick = async () => {\n    await sendEmailForRecovery();\n  };\n  recoveryCodeLink.onclick = () => {\n    debugger;\n    showRecoveryCodePrompt();\n    debugger;\n  };\n\n  codeRecoverySubmitButton.onclick = async () => {\n    disableButtonAndShowSpinner(codeRecoverySubmitButton);\n    document.getElementById(\"modal-error\").textContent = \"\";\n    const code = document.getElementById(\"code-field\").value;\n    const password = document.getElementById(\"password\").value;\n    const password_confirm = document.getElementById(\n      \"password-confirmation\",\n    ).value;\n\n    if (!code || !password || !password_confirm) {\n      document.getElementById(\"modal-error\").textContent =\n        \"All fields are required to be filled\";\n      enableButtonAndRemoveSpinner(codeRecoverySubmitButton);\n      enableUserModalShake(document.getElementById(\"recovery-modal\"));\n      return;\n    }\n\n    await tryRecoveryCode(code, password, password_confirm);\n  };\n});\n"],"names":["savePost","documentId","text","response","fetch","JSON","open_external_error_modal","error","deleteDocument","globalTimeoutId","changeToSelectedDocument","event","fetchFunction","documentArray","clearInterval","document_id","title","document","editor","Event","setInterval","deleteSelectedDocument","deleteFunction","enableButtonAndRemoveSpinner","button","enableUserModalShake","modal","sendEmailForRecovery","emailModal","sentModal","submitEmailButtonAction","serverResponse","console","tryRecoveryCode","recoveryCode","password","password_confirm","modalError","sendEmailForRecoveryButton","recoveryCodeLink","codeRecoverySubmitButton","recoveryModal","disableButtonAndShowSpinner","mode","spinnerColor","code"],"mappings":"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"}